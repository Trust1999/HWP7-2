#include <Arduino.h>

uint8_t lesenNibble()
{
  uint8_t nibble = 0b00000000;
  
  // Lesen der Eingänge auf Pins 6 bis 9 und Setzen der entsprechenden Bits
  nibble |= (digitalRead(6) << 3);  // Pin 6 -> Bit 3
  nibble |= (digitalRead(7) << 2);  // Pin 7 -> Bit 2
  nibble |= (digitalRead(8) << 1);  // Pin 8 -> Bit 1
  nibble |= (digitalRead(9) << 0);  // Pin 9 -> Bit 0

  return nibble;
}

void writeNibble(const uint8_t nibble)
{
  // Schreiben der Nibble-Daten auf Pins 2 bis 5
  digitalWrite(2, (nibble >> 3) & 0x01);  // Bit 3 -> Pin 2
  digitalWrite(3, (nibble >> 2) & 0x01);  // Bit 2 -> Pin 3
  digitalWrite(4, (nibble >> 1) & 0x01);  // Bit 1 -> Pin 4
  digitalWrite(5, (nibble >> 0) & 0x01);  // Bit 0 -> Pin 5
}

void setup()
{  
  // Setze die Pins als Ausgang (Pins 2-5)
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  
  // Setze die Pins als Eingang (Pins 6-9)
  pinMode(6, INPUT);
  pinMode(7, INPUT);
  pinMode(8, INPUT);
  pinMode(9, INPUT);

  Serial.begin(57600);
  while (!Serial);
}

void loop()
{
  // Wenn Daten auf der seriellen Schnittstelle empfangen wurden, lese ein Nibble
  if (Serial.available())
  {
    uint8_t receivedNibble = Serial.read();  // Lies das übertragene Nibble
    /*digitalWrite(2,255);
    digitalWrite(3,255);
    digitalWrite(4,255);
    digitalWrite(5,255);*/
  }
  
  // Lese ein Nibble von den Eingängen (Pins 6-9) und sende es über die serielle Schnittstelle
  uint8_t nibble = lesenNibble();
  Serial.write(nibble);  // Sende das gelesene Nibble
  delay(1);  // Optional, um das System nicht zu überlasten
}
